1、IOC  控制反转（Inserver  of  Control）  一般分为依赖注入（Dependency  Injection）和依赖查找（Dependency  Lookup）
2、规则
	高层次的模块不应该依赖于低层次的模块，他们都应该依赖于抽象
	抽象不应该依赖于具体，具体应该依赖于抽象
	对扩展开放  对修改关闭

	依赖倒置原则(DIP):一种软件架构设计的原则（抽象概念）
	控制反转(IOC):一种反转 流  依赖和接口的方式（DIP的具体实现方式）
	依赖注入(DI):IOC的一种实现方式，用来反转依赖（IOC的具体实现方式）
	IOC容器：依赖注入的框架，用来映射依赖，管理对象创建和生存周期（DI框架）
	啊啊啊



